AppType=JavaFX
Build1=Default,b4j.example
File1=languagesWithoutSpace.txt
File2=main.bjl
FileGroup1=Default Group
FileGroup2=Default Group
Group=Default Group
Library1=jcore
Library2=jfx
Library3=jsql
Library4=jrandomaccessfile
Library5=javaobject
Library6=jstringutils
Library7=jpoi
Module1=LanguageUtils
Module2=DB
Module3=Utils
NumberOfFiles=2
NumberOfLibraries=7
NumberOfModules=3
Version=7.8
@EndOfDesignText@
#Region Project Attributes 
	#MainFormWidth: 600
	#MainFormHeight: 600 
#End Region

#AdditionalJar: sqlite-jdbc-3.23.1
#AdditionalJar: bcprov-jdk15on-154

Sub Process_Globals
	Private fx As JFX
	Private MainForm As Form
	Private imitatives As List
End Sub

Sub AppStart (Form1 As Form, Args() As String)
	MainForm = Form1
	MainForm.RootPane.LoadLayout("main") 'Load the layout file.
	MainForm.Show
	imitatives.Initialize
End Sub

'Return true to allow the default exceptions handler to handle the uncaught exception.
Sub Application_Error (Error As Exception, StackTrace As String) As Boolean
	Return True
End Sub

Sub Button2_MouseClicked (EventData As MouseEvent)
	Dim entries As List=cleanedEntries
	File.WriteList(File.DirApp,"clean.txt",entries)
	imitatives.AddAll(entries)
End Sub

Sub cleanedEntry(entry As String) As String
	entry=Regex.Replace($"<span class="DC">.*?</span>"$,entry,"")
	entry=Regex.Replace("<.*?>",entry,CRLF)
	entry=entry.Replace("\n","")
	entry=entry.Replace("■","")
	Dim matcher As Matcher
	matcher=Regex.Matcher(CRLF&CRLF,entry)
	Do While matcher.Find
		entry=Regex.Replace(CRLF&CRLF,entry,CRLF)
		matcher=Regex.Matcher(CRLF&CRLF,entry)
	Loop
	Return entry
End Sub

Sub cleanedEntries As List
	Dim newList As List
	newList.Initialize
	Dim entries As List
	entries=File.ReadList(File.DirApp,"imitatives.txt")
	For Each entry As String In entries
		entry=cleanedEntry(entry)
		newList.Add(entry)
	Next
	Return newList
End Sub

Sub Button1_MouseClicked (EventData As MouseEvent)
	Dim entries As List
	entries=File.ReadList(File.DirApp,"out.txt")
	Dim newList As List
	newList.Initialize
	For Each entry As String In entries
		If entry.Contains("语源") Then
			
			Try
				Dim splited As String
				splited=entry.Replace($"<span class="section_title">语源</span>"$,CRLF)
				Dim etymology As String = Regex.Split(CRLF,splited)(1)
				If etymology.Contains("imitative") Then
					newList.Add(entry)
				End If
			Catch
				Log(LastException)
			End Try

		End If
	Next
	File.WriteList(File.DirApp,"imitatives.txt",newList)
End Sub

Sub Button3_MouseClicked (EventData As MouseEvent)
    Dim wb As PoiWorkbook
	wb.InitializeNew(True)
	Dim sheet1 As PoiSheet = wb.AddSheet("Sheet1",0)
	Dim entries As List
	entries=File.ReadList(File.DirApp,"imitatives.txt")
	Dim row As PoiRow = sheet1.CreateRow(0)
	row.CreateCellString(0,"word")
	row.CreateCellString(1,"raw")
	For Each entry As String In entries
		Dim word,content As String
		word=Regex.Split("\t",entry)(0).Trim
		content=Regex.Split("\t",entry)(1).Trim
		Dim row As PoiRow = sheet1.CreateRow(sheet1.LastRowNumber+1)
		row.CreateCellString(0,word)
		row.CreateCellString(1,content)
	Next
	wb.Save(File.DirApp,"out.xlsx")
End Sub

Sub Button4_MouseClicked (EventData As MouseEvent)
    Dim wb As PoiWorkbook
	wb.InitializeExisting(File.DirApp,"out.xlsx","")
	Dim sheet1 As PoiSheet = wb.GetSheet(0)

	Dim heads As List
	Dim data As List
	data.Initialize
	Dim index As Int=0
	For Each row As PoiRow In sheet1.Rows		
		index=index+1
		If index=1 Then
			heads=row.Cells
			Continue
		End If
		data.Add(row.Cells)
	Next
	Dim newWb As PoiWorkbook
	newWb.InitializeNew(True)
	Dim sheet1 As PoiSheet = newWb.AddSheet("Sheet1",0)
	Dim row As PoiRow = sheet1.CreateRow(0)
	row.CreateCellString(0,"word")
	row.CreateCellString(1,"content")
	row.CreateCellString(2,"raw")
	For Each r As List In data
		Dim row As PoiRow = sheet1.CreateRow(sheet1.LastRowNumber+1)
		Dim cleaned As String=cleanedEntry(r.Get(1))
		If cleaned.Contains("honk") Then
			Log(cleaned)
		End If
		row.CreateCellString(0,r.Get(0))
		row.CreateCellString(1,getStringForIndex(cleaned))
		row.CreateCellString(2,r.Get(1))
	Next
	newWb.Save(File.DirApp,"export.xlsx")
End Sub

Sub getStringForIndex(text As String) As String
	text=text.Replace(CRLF," ")
	Dim sb As StringBuilder
	sb.Initialize
	Dim words As List
	words.Initialize
	words.AddAll(LanguageUtils.TokenizedList(text,"en"))
	'Log(words)
	LanguageUtils.removeChineseWords(words)
	words.AddAll(LanguageUtils.TokenizedList(text,"zh"))
	LanguageUtils.removeCharacters(words)
	'Log(words)
	For index =0 To words.Size-1
		sb.Append(words.Get(index)).Append(" ")
	Next
	Return sb.ToString.Trim
End Sub

Sub exportToSQLite
	Dim db1 As DB
	db1.Initialize(File.DirApp,"1.db")
	db1.Put(imitatives)
	db1.Close
End Sub